# CloudFormation output name: `sls-${SERVICE_NAME}-${STAGE}`
service: sls-${self:custom.service}

custom:
  service: ${env:SERVICE_NAME}
  region: ${opt:region, env:AWS_REGION}
  stage: ${opt:stage, env:STAGE}
  apikey: ${opt:apikey, env:API_KEY_SECRET}
  jetpack:
    preInclude:
      - "!**" # Start with absolutely nothing
    trace:
      ignores:
        - aws-sdk # Provide in lambda

package:
  include:
    # Need public directory manual inclusion for web page.
    - "public/**"
    # Non-traceable dependency files
    # See: https://github.com/FormidableLabs/trace-deps/issues/16
    - "node_modules/errorhandler/public/**"

plugins:
  - serverless-offline
  - serverless-jetpack

provider:
  name: aws

  # Required: import the default role that terraform-aws-serverless generates.
  role:
    Fn::ImportValue: tf-${self:custom.service}-${self:custom.stage}-LambdaExecutionRoleArn

  # Lambda configuration
  runtime: nodejs12.x
  timeout: 30 # seconds (`300` max)
  memorySize: 128 # MB value (`1024` default)

  # Deployment / environment configuration
  region: ${self:custom.region}
  stage: ${self:custom.stage}
  environment:
    STAGE: ${self:custom.stage}
    SERVICE_NAME: ${self:custom.service}
    API_KEY_SECRET: ${self:custom.apikey}

  # AWS Resource Tags: Match terraform module
  stackTags: # For CF stack
    Stage: ${self:custom.stage}
    Service: ${self:custom.service}
  tags: # For resources
    Stage: ${self:custom.stage}
    Service: ${self:custom.service}

functions:
  server:
    handler: src/server/index.handler
    events: # Use a generic proxy to allow Express app to route.
      - http: ANY /
      - http: 'ANY /{proxy+}'
